// Generated by CoffeeScript 1.6.2
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  require.config({
    paths: {
      jquery: 'lib/jquery-2.0.1',
      backbone: 'lib/backbone',
      underscore: 'lib/lodash.underscore',
      marionette: 'lib/backbone.marionette',
      babysitter: 'lib/backbone.babysitter',
      wreq: 'lib/backbone.wreqr',
      socketio: 'lib/socket.io',
      backboneiosync: 'lib/backbone.iosync',
      backboneiobind: 'lib/backbone.iobind'
    },
    shim: {
      backbone: {
        exports: 'Backbone',
        deps: ['jquery', 'underscore']
      },
      backboneiosync: {
        deps: ['backbone', 'socketio']
      },
      backboneiobind: {
        deps: ['backboneiosync']
      },
      marionette: {
        exports: 'Backbone.Marionette',
        deps: ['backboneiobind']
      }
    }
  });

  require(['marionette', 'router', 'backbone', 'socketio'], function(M, Router, B, io) {
    var GiftShop,
      _this = this;

    GiftShop = new M.Application();
    window.GiftShop = GiftShop;
    GiftShop.addRegions({
      header: '#header-l',
      main: '#main-l',
      footer: '#footer-l'
    });
    GiftShop.start();
    GiftShop.router = new Router;
    Backbone.history.start({
      pushState: true
    });
    window.socket = io.connect('http://localhost');
    setTimeout(function() {
      var Collection, Model, _ref, _ref1;

      Model = (function(_super) {
        __extends(Model, _super);

        function Model() {
          _ref = Model.__super__.constructor.apply(this, arguments);
          return _ref;
        }

        return Model;

      })(B.Model);
      Collection = (function(_super) {
        __extends(Collection, _super);

        function Collection() {
          _ref1 = Collection.__super__.constructor.apply(this, arguments);
          return _ref1;
        }

        return Collection;

      })(B.Collection);
      _this.collection = new Collection;
      _this.collection.url = 'users';
      _this.collection.fetch();
      return console.log('fetch');
    }, 3000);
    return $('#js-a').on('click', function() {
      return window.GiftShop.router.navigate('/about', {
        trigger: true
      });
    });
  });

}).call(this);
